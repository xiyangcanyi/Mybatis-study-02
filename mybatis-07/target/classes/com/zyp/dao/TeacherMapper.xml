<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--configuration核心配置文件-->
<mapper namespace="com.zyp.dao.TeacherMapper">
<!--    按照结果嵌套查询-->
    <select id="getTeacher" resultMap="TeacherStudent">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from  mybatis.student s,mybatis.teacher t where s.tid=t.id and t.id=#{tid};
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
<!--     复杂的属性，我们需要单独处理，对象：association 集合：collection
            javaType=“” 指定属性的类型！
            集合中的泛型信息，我们使用oftype获取-->

<!--        JavaType用来指定实体类属性
            ofType 用来映射到List或者集合中的pojo类型，泛型中的约束类型-->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>
<!--    =====================================================-->
        <select id="getTeacher2" resultMap="TeacherStudent2">
            select *
            from mybatis.teacher t  where t.id=#{tid};
        </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="students" javaType="ArrayList"  ofType="Student" select="getStudentByTeacherId" column="id"/>

    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        select *
        from mybatis.student where tid=#{id};
    </select>
</mapper>